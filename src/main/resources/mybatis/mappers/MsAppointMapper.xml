<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ttl.myspringboot.dao.MsAppointMapper" >
  <resultMap id="BaseResultMap" type="com.ttl.myspringboot.po.MsAppoint" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="project_id" property="projectId" jdbcType="INTEGER" />
    <result column="appoint_title" property="appointTitle" jdbcType="VARCHAR" />
    <result column="people_num" property="peopleNum" jdbcType="INTEGER" />
    <result column="welfare_list" property="welfareList" jdbcType="VARCHAR" />
    <result column="vocation_id" property="vocationId" jdbcType="INTEGER" />
    <result column="pay_desc" property="payDesc" jdbcType="VARCHAR" />
    <result column="character_id" property="characterId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="start_date" property="startDate" jdbcType="DATE" />
    <result column="end_date" property="endDate" jdbcType="DATE" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="appoint_status" property="appointStatus" jdbcType="TINYINT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.ttl.myspringboot.po.MsAppoint" extends="BaseResultMap" >
    <result column="appoint_desc" property="appointDesc" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, project_id, appoint_title, people_num, welfare_list, vocation_id, pay_desc, character_id, 
    user_id, start_date, end_date, create_time, update_time, appoint_status
  </sql>
  <sql id="Blob_Column_List" >
    appoint_desc
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.ttl.myspringboot.po.MsAppointExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ms_appoint
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ttl.myspringboot.po.MsAppointExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from ms_appoint
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ms_appoint
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ms_appoint
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ttl.myspringboot.po.MsAppointExample" >
    delete from ms_appoint
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ttl.myspringboot.po.MsAppoint" >
    insert into ms_appoint (id, project_id, appoint_title, 
      people_num, welfare_list, vocation_id, 
      pay_desc, character_id, user_id, 
      start_date, end_date, create_time, 
      update_time, appoint_status, appoint_desc
      )
    values (#{id,jdbcType=INTEGER}, #{projectId,jdbcType=INTEGER}, #{appointTitle,jdbcType=VARCHAR}, 
      #{peopleNum,jdbcType=INTEGER}, #{welfareList,jdbcType=VARCHAR}, #{vocationId,jdbcType=INTEGER}, 
      #{payDesc,jdbcType=VARCHAR}, #{characterId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{startDate,jdbcType=DATE}, #{endDate,jdbcType=DATE}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{appointStatus,jdbcType=TINYINT}, #{appointDesc,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ttl.myspringboot.po.MsAppoint" >
    insert into ms_appoint
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="projectId != null" >
        project_id,
      </if>
      <if test="appointTitle != null" >
        appoint_title,
      </if>
      <if test="peopleNum != null" >
        people_num,
      </if>
      <if test="welfareList != null" >
        welfare_list,
      </if>
      <if test="vocationId != null" >
        vocation_id,
      </if>
      <if test="payDesc != null" >
        pay_desc,
      </if>
      <if test="characterId != null" >
        character_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="startDate != null" >
        start_date,
      </if>
      <if test="endDate != null" >
        end_date,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="appointStatus != null" >
        appoint_status,
      </if>
      <if test="appointDesc != null" >
        appoint_desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="projectId != null" >
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="appointTitle != null" >
        #{appointTitle,jdbcType=VARCHAR},
      </if>
      <if test="peopleNum != null" >
        #{peopleNum,jdbcType=INTEGER},
      </if>
      <if test="welfareList != null" >
        #{welfareList,jdbcType=VARCHAR},
      </if>
      <if test="vocationId != null" >
        #{vocationId,jdbcType=INTEGER},
      </if>
      <if test="payDesc != null" >
        #{payDesc,jdbcType=VARCHAR},
      </if>
      <if test="characterId != null" >
        #{characterId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="startDate != null" >
        #{startDate,jdbcType=DATE},
      </if>
      <if test="endDate != null" >
        #{endDate,jdbcType=DATE},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="appointStatus != null" >
        #{appointStatus,jdbcType=TINYINT},
      </if>
      <if test="appointDesc != null" >
        #{appointDesc,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ttl.myspringboot.po.MsAppointExample" resultType="java.lang.Integer" >
    select count(*) from ms_appoint
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ms_appoint
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.projectId != null" >
        project_id = #{record.projectId,jdbcType=INTEGER},
      </if>
      <if test="record.appointTitle != null" >
        appoint_title = #{record.appointTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.peopleNum != null" >
        people_num = #{record.peopleNum,jdbcType=INTEGER},
      </if>
      <if test="record.welfareList != null" >
        welfare_list = #{record.welfareList,jdbcType=VARCHAR},
      </if>
      <if test="record.vocationId != null" >
        vocation_id = #{record.vocationId,jdbcType=INTEGER},
      </if>
      <if test="record.payDesc != null" >
        pay_desc = #{record.payDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.characterId != null" >
        character_id = #{record.characterId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.startDate != null" >
        start_date = #{record.startDate,jdbcType=DATE},
      </if>
      <if test="record.endDate != null" >
        end_date = #{record.endDate,jdbcType=DATE},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.appointStatus != null" >
        appoint_status = #{record.appointStatus,jdbcType=TINYINT},
      </if>
      <if test="record.appointDesc != null" >
        appoint_desc = #{record.appointDesc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update ms_appoint
    set id = #{record.id,jdbcType=INTEGER},
      project_id = #{record.projectId,jdbcType=INTEGER},
      appoint_title = #{record.appointTitle,jdbcType=VARCHAR},
      people_num = #{record.peopleNum,jdbcType=INTEGER},
      welfare_list = #{record.welfareList,jdbcType=VARCHAR},
      vocation_id = #{record.vocationId,jdbcType=INTEGER},
      pay_desc = #{record.payDesc,jdbcType=VARCHAR},
      character_id = #{record.characterId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      start_date = #{record.startDate,jdbcType=DATE},
      end_date = #{record.endDate,jdbcType=DATE},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      appoint_status = #{record.appointStatus,jdbcType=TINYINT},
      appoint_desc = #{record.appointDesc,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ms_appoint
    set id = #{record.id,jdbcType=INTEGER},
      project_id = #{record.projectId,jdbcType=INTEGER},
      appoint_title = #{record.appointTitle,jdbcType=VARCHAR},
      people_num = #{record.peopleNum,jdbcType=INTEGER},
      welfare_list = #{record.welfareList,jdbcType=VARCHAR},
      vocation_id = #{record.vocationId,jdbcType=INTEGER},
      pay_desc = #{record.payDesc,jdbcType=VARCHAR},
      character_id = #{record.characterId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      start_date = #{record.startDate,jdbcType=DATE},
      end_date = #{record.endDate,jdbcType=DATE},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      appoint_status = #{record.appointStatus,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ttl.myspringboot.po.MsAppoint" >
    update ms_appoint
    <set >
      <if test="projectId != null" >
        project_id = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="appointTitle != null" >
        appoint_title = #{appointTitle,jdbcType=VARCHAR},
      </if>
      <if test="peopleNum != null" >
        people_num = #{peopleNum,jdbcType=INTEGER},
      </if>
      <if test="welfareList != null" >
        welfare_list = #{welfareList,jdbcType=VARCHAR},
      </if>
      <if test="vocationId != null" >
        vocation_id = #{vocationId,jdbcType=INTEGER},
      </if>
      <if test="payDesc != null" >
        pay_desc = #{payDesc,jdbcType=VARCHAR},
      </if>
      <if test="characterId != null" >
        character_id = #{characterId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="startDate != null" >
        start_date = #{startDate,jdbcType=DATE},
      </if>
      <if test="endDate != null" >
        end_date = #{endDate,jdbcType=DATE},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="appointStatus != null" >
        appoint_status = #{appointStatus,jdbcType=TINYINT},
      </if>
      <if test="appointDesc != null" >
        appoint_desc = #{appointDesc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ttl.myspringboot.po.MsAppoint" >
    update ms_appoint
    set project_id = #{projectId,jdbcType=INTEGER},
      appoint_title = #{appointTitle,jdbcType=VARCHAR},
      people_num = #{peopleNum,jdbcType=INTEGER},
      welfare_list = #{welfareList,jdbcType=VARCHAR},
      vocation_id = #{vocationId,jdbcType=INTEGER},
      pay_desc = #{payDesc,jdbcType=VARCHAR},
      character_id = #{characterId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      start_date = #{startDate,jdbcType=DATE},
      end_date = #{endDate,jdbcType=DATE},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      appoint_status = #{appointStatus,jdbcType=TINYINT},
      appoint_desc = #{appointDesc,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ttl.myspringboot.po.MsAppoint" >
    update ms_appoint
    set project_id = #{projectId,jdbcType=INTEGER},
      appoint_title = #{appointTitle,jdbcType=VARCHAR},
      people_num = #{peopleNum,jdbcType=INTEGER},
      welfare_list = #{welfareList,jdbcType=VARCHAR},
      vocation_id = #{vocationId,jdbcType=INTEGER},
      pay_desc = #{payDesc,jdbcType=VARCHAR},
      character_id = #{characterId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      start_date = #{startDate,jdbcType=DATE},
      end_date = #{endDate,jdbcType=DATE},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      appoint_status = #{appointStatus,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>